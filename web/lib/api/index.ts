import createClient from "openapi-fetch";
import type { paths } from "./openapi"; // generated by openapi-typescript
import useSWR from 'swr'

const client = createClient<paths>({ baseUrl: "http://10.0.0.83/v2/status/" });

async function  getCPUHistoryData(){
    const currentTimestamp = new Date().getTime();
    const OneMinuteAgo = 0;
    const {
        data, // only present if 2XX response
        error, // only present if 4XX or 5XX response
      } = await client.GET("/history/cpu",{
        params: {
            query: { 
                start: OneMinuteAgo.toString(),
                end: currentTimestamp.toString(),
            },
        }});
      return data?.data|| [];
    
}

const useCPUUsageHistory = () => {
    const {data,isLoading,error}= useSWR('cpu',getCPUHistoryData, {
        refreshInterval: 30000, // 3秒钟
      });
    
    return {
        data,
        isLoading,
        error,
    }
}

async function  getCurrentUsage(){
    const {
        data, // only present if 2XX response
        error, // only present if 4XX or 5XX response
      } = await client.GET("/usage");
      return data?.data;
}

const useUsage = () => {
    const {data,isLoading,error}= useSWR('usage',getCurrentUsage, {
        refreshInterval: 3000, // 3秒钟
      });
    
    return {
        data,
        isLoading,
        error,
    }
}


export {useUsage,useCPUUsageHistory};